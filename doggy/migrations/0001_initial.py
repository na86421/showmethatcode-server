# Generated by Django 3.0.4 on 2020-05-05 07:28

from django.db import migrations, models
import django.db.models.deletion

def add_dog_list(apps, schema_editor):
    dog_list = apps.get_model('doggy', 'Dog')
    dogs = [
        {
            'breed': 'bulldog',
            'description': '• 순종적이고 온순한 편이며 사교적이고고 우호적인 강아지입니다..\n• 자신감이 높은 주인과 잘 어울립니다.',
            'adaptability': 1,
            'confidence': 2,
            'independence': 1,
            'positiveness': 1,
            'shyness': 1,
            'image': 'https://showmethatcode-static.s3.ap-northeast-2.amazonaws.com/doggy/bulldog.jpg',
            'breed_kr': '불독',
            'summary': '온순한 인기파'
        },
        {
            'breed': 'pomeranian',
            'description': '• 항상 주의깊고 순수하며 활발합니다.\n• 적응력이 뛰어나고 긍정적인 성격의 주인과 잘 어울립니다.',
            'adaptability': 2,
            'confidence': 2,
            'independence': 1,
            'positiveness': 1,
            'shyness': 0,
            'image': 'https://showmethatcode-static.s3.ap-northeast-2.amazonaws.com/doggy/pomeranian.jpg',
            'breed_kr': '포메라니안',
            'summary': '대범한 사교파'
        },
        {
            'breed': 'yorkshire',
            'description': '• 혈기왕성하고 권위적인 성격을 지니고 있네요!\n• 사냥개 태생이라 활발하고 성질있고 까칠해요.\n• 자신감이 높고 자기주장이 뚜렷한 주인과 잘 어울려요.',
            'adaptability': 1,
            'confidence': 2,
            'independence': 2,
            'positiveness': 1,
            'shyness': 0,
            'image': 'https://showmethatcode-static.s3.ap-northeast-2.amazonaws.com/doggy/yorkshire.jpg',
            'breed_kr': '요크셔테리어',
            'summary': '꿋꿋한 신조파'
        },
        {
            'breed': 'schnauzer',
            'description': '• 겁이 없고 용맹한 성격을 지니고 있네요!\n• 야영역의식이 매우 강하고 다른 강아지들에게 호전적이에요.\n• 독립심과 자신감이 높은 주인과 잘 어울려요.',
            'adaptability': 1,
            'confidence': 2,
            'independence': 2,
            'positiveness': 1,
            'shyness': 0,
            'image': 'https://showmethatcode-static.s3.ap-northeast-2.amazonaws.com/doggy/schnauzer.jpg',
            'breed_kr': '슈나우저',
            'summary': '명량한 해결파'
        },
        {
            'breed': 'retriever',
            'description': '• 경계심이 많고 주인의 기분을 잘 살펴요!\n• ',
            'adaptability': 2,
            'confidence': 0,
            'independence': 2,
            'positiveness': 1,
            'shyness': 1,
            'image': 'https://showmethatcode-static.s3.ap-northeast-2.amazonaws.com/doggy/retriever.jpg',
            'breed_kr': '리트리버',
            'summary': '굳센 의리파'
        },
        {
            'breed': 'beagle',
            'description': '• 악마견 1위로 여겨질 정도로 키우기가 까다로워요!\n• 친화력이 매우 높고 혼자 있는 걸 매우 싫어해요.\n• 항상 밖에 나가 놀기 좋아하는 주인과 잘 어울려요.',
            'adaptability': 2,
            'confidence': 2,
            'independence': 1,
            'positiveness': 1,
            'shyness': 0,
            'image': 'https://showmethatcode-static.s3.ap-northeast-2.amazonaws.com/doggy/beagle.jpeg',
            'breed_kr': '비글',
            'summary': '독립적인 지조파'
        },
        {
            'breed': 'husky',
            'description': '미정',
            'adaptability': 2,
            'confidence': 0,
            'independence': 1,
            'positiveness': 1,
            'shyness': 2,
            'image': 'https://showmethatcode-static.s3.ap-northeast-2.amazonaws.com/doggy/husky.jpg',
            'breed_kr': '시베리안 허스키',
            'summary': '순둥순둥 사교파'
        },
        {
            'breed': 'welsh',
            'description': '미정',
            'adaptability': 1,
            'confidence': 2,
            'independence': 0,
            'positiveness': 2,
            'shyness': 1,
            'image': 'https://showmethatcode-static.s3.ap-northeast-2.amazonaws.com/doggy/welsh.jpg',
            'breed_kr': '웰시코기',
            'summary': '적극적인 친밀파'
        },
        {
            'breed': 'poodle',
            'description': '미정',
            'adaptability': 2,
            'confidence': 2,
            'independence': 1,
            'positiveness': 1,
            'shyness': 1,
            'image': 'https://showmethatcode-static.s3.ap-northeast-2.amazonaws.com/doggy/poodle.jpg',
            'breed_kr': '푸들',
            'summary': '만능 사교파'
        },
        {
            'breed': 'greyhound',
            'description': '• 내성적이고 수줍음을 많이 타는 소심한 성격의 강아지네요!. \n• 얌전하고 조용하며 공격성이 전혀 없어요.\n• 조심성이 많은 성격의 주인과 잘 어울려요.',
            'adaptability': 0,
            'confidence': 1,
            'independence': 2,
            'positiveness': 1,
            'shyness': 2,
            'image': 'https://showmethatcode-static.s3.ap-northeast-2.amazonaws.com/doggy/greyhound.jpg',
            'breed_kr': '그레이하운드',
            'summary': '내성적인 지조파'
        },
        {
            'breed': 'dalmatian',
            'description': '• 주인 외에는 낯을 많이 가리고 공격적인 성향을 보이네요!\n• 낯선 사람에게 경계심이 높고 감각이 예민해요.\n• 혼자 있는 것을 좋아하는 성격의 주인과 잘 어울려요.',
            'adaptability': 0,
            'confidence': 2,
            'independence': 2,
            'positiveness': 0,
            'shyness': 2,
            'image': 'https://showmethatcode-static.s3.ap-northeast-2.amazonaws.com/doggy/dalmatian.jpg',
            'breed_kr': '달마시안',
            'summary': '예민한 신조파'
        },
        {
            'breed': 'maltese',
            'description': '• 성격이 상당히 까다롭고 예민하네요!\n• 자기 주장이 강하고 고집이 세요!\n• 뚝심 있는 주인과 잘 어울려요.',
            'adaptability': 0,
            'confidence': 1,
            'independence': 1,
            'positiveness': 2,
            'shyness': 2,
            'image': 'https://showmethatcode-static.s3.ap-northeast-2.amazonaws.com/doggy/maltese.jpg',
            'breed_kr': '말티즈',
            'summary': '수줍은 긍정파'
        }
    ]

def add_question_list(apps, schema_editor):
    question_list = apps.get_model('doggy', 'Question')
    questions = [
        {
            'question': '나는 남에게 전화할 때',
            'personality': 'Confidence'
        },
        {
            'question': '나는 강아지를 보면',
            'personality': 'Confidence'
        },
        {
            'question': '나는 카톡 읽씹 당하면',
            'personality': 'Shyness'
        },
        {
            'question': '나는 미용실에서 머리가 망하면',
            'personality': 'Shyness'
        },
        {
            'question': '나는 혼자 여행하는 걸',
            'personality': 'Independence'
        },
        {
            'question': '나는 조별과제를 할 때',
            'personality': 'Independence'
        },
        {
            'question': '나는 멘탈이',
            'personality': 'Positiveness'
        },
        {
            'question': '나는 10년 뒤에 ',
            'personality': 'Positiveness'
        },
        {
            'question': '나는 새로운 사람을 만나는 것을',
            'personality': 'Adaptability'
        },
        {
            'question': '나는 음식이 맛이 없을 때',
            'personality': 'Adaptability'
        },
    ]

    for item in questions:
        _question = question_list(
            question = item['question'],
            personality = item['personality']
        )
        _question.save()

def add_choice_list(apps, schema_editor):
    choice_list = apps.get_model('doggy', 'Choice')
    choices = [
        {
            'text': '서슴없이 전화하는 편이다',
            'score': 1,
            'question_id': 1
        },
        {
            'text': '고심 끝에 전화하는 편이다',
            'score': 0,
            'question_id': 1
        },
        {
            'text': '잘 다가가는 편이다',
            'score': 1,
            'question_id': 2
        },
        {
            'text': '멀찍이 지켜보는 편이다',
            'score': 0,
            'question_id': 2
        },
        {
            'text': '하루 종일 마음에 담아두는 편이다',
            'score': 1,
            'question_id': 3
        },
        {
            'text': '쿨하게 넘기는 편이다',
            'score': 0,
            'question_id': 3
        },
        {
            'text': '웃으면서 감사하다고 인사 하고 나온다',
            'score': 1,
            'question_id': 4
        },
        {
            'text': '솔직하게 마음에 들지 않는다고 말한다',
            'score': 0,
            'question_id': 4
        },
        {
            'text': '좋아하는 편이다',
            'score': 1,
            'question_id': 5
        },
        {
            'text': '좋아하지 않는다',
            'score': 0,
            'question_id': 5
        },
        {
            'text': '주도하는 편이다',
            'score': 1,
            'question_id': 6
        },
        {
            'text': '적당히 따라가는 편이다',
            'score': 0,
            'question_id': 6
        },
        {
            'text': '강한 편이다',
            'score': 1,
            'question_id': 7
        },
        {
            'text': '약한 편이다',
            'score': 0,
            'question_id': 7
        },
        {
            'text': '성공할 것 같다',
            'score': 1,
            'question_id': 8
        },
        {
            'text': '평범하게 살 것 같다',
            'score': 0,
            'question_id': 8
        },
        {
            'text': '좋아하는 편이다',
            'score': 1,
            'question_id': 9
        },
        {
            'text': '좋아하지 않는 편이다',
            'score': 0,
            'question_id': 9
        },
        {
            'text': '그냥 참고 먹는 편이다',
            'score': 1,
            'question_id': 10
        },
        {
            'text': '그대로 남기는 편이다',
            'score': 0,
            'question_id': 10
        },
    ]

    for item in choices:
        _choice = choice_list(
            text = item['text'],
            score = item['score'],
            question_id = item['question_id']
        )
        _choice.save()

class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('breed', models.CharField(max_length=20, verbose_name='견종')),
                ('breed_kr', models.CharField(default='', max_length=20, verbose_name='견종')),
                ('description', models.TextField(verbose_name='테스트 결과 설명')),
                ('confidence', models.IntegerField(verbose_name='자신감')),
                ('shyness', models.IntegerField(verbose_name='부끄러움')),
                ('independence', models.IntegerField(verbose_name='자립심')),
                ('positiveness', models.IntegerField(verbose_name='긍정 마인드')),
                ('adaptability', models.IntegerField(verbose_name='적응력')),
                ('image', models.URLField(null=True, verbose_name='이미지 경로')),
                ('summary', models.CharField(max_length=20, verbose_name='요약')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=20, verbose_name='질문')),
                ('personality', models.CharField(choices=[(1, 'Confidence'), (2, 'Shyness'), (3, 'Independence'), (4, 'Positiveness'), (5, 'Adaptability')], max_length=30, verbose_name='성격')),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200, verbose_name='텍스트')),
                ('score', models.IntegerField(verbose_name='배점')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='doggy.Question', verbose_name='질문')),
            ],
        ),
    ]
    migrations.RunPython(add_dog_list)
    migrations.RunPython(add_question_list)
    migrations.RunPython(add_choice_list)
